---

- name: check for the pv for {{ oracle_vg }}
  stat: path="{{ oracle_pv }}"
  register: pv

- name: check for the volume group
  command: "vgs {{ oracle_vg }}"
  ignore_errors: yes
  register: vg  

- name: create the partition table for "{{ oracle_vg }}"
  command: parted -s "{{ oracle_pv }}" mklabel gpt mkpart oravg 1G 100% set 1 lvm on quit 
  args:
    creates: "{{ oracle_pv }}1"
  when: pv | success and pv.stat.isblk is defined and vg | failed

- name: create the volume group
  lvg:
    vg: "{{ oracle_vg }}"
    pvs: "{{ oracle_pv }}1"
    state: present
  when: oracle_vg is defined and vg.rc != 0
  ignore_errors: yes # in case we want to use an exisitng VG. 
  
- name: create the oracle binary fs lv
  lvol: 
    vg: "{{ oracle_vg }}"
    lv: "{{ item.lv }}"
    size: "{{ item.size }}"
    state: present
  with_items:
    - { lv: "{{ oracle_bin_lv }}", size: 6G }
    - { lv: "{{ oracle_data_lv }}", size: +100%FREE }

- name: create the oracle filesystems 
  filesystem: fstype="{{ oracle_fstype }}" dev="/dev/{{ oracle_vg }}/{{ item }}"
  with_items:
    - "{{ oracle_bin_lv }}"
    - "{{ oracle_data_lv }}"

- name: create the mountpoints
  file:
    path: "{{ item }}"
    state: directory
    mode: "u=rwx,g=rwx,o=rx"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
  with_items:
    - "{{ oracle_data_fs }}"
    - "{{ oracle_bin_fs }}"
    
- name: create and mount oracle filesystems fs
  mount:
  args:
        path: "{{ item.mountpoint }}"
        src: "/dev/{{ oracle_vg }}/{{ item.lv }}"
        boot: yes
        state: mounted
        fstype: "{{ oracle_fstype }}"
  with_items:
    - { lv: "{{ oracle_data_lv }}", mountpoint: "{{ oracle_data_fs }}" }
    - { lv: "{{ oracle_bin_lv }}", mountpoint: "{{ oracle_bin_fs }}" }

- name: set the ownerships oracle bin fs
  file:
    path: "{{ item }}"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    mode: "u=rwx,g=rwx,o=rx"
    recurse: yes
  with_items: 
    - "{{ oracle_bin_fs }}"
    - "{{ oracle_data_fs }}"
    
# end of spectrum changes

- name: create the oracle installation path
  file:
    mode: 0755
    path: "{{ oracle_base }}"
    state: directory
    group: "{{ oracle_group }}"
    owner: "{{ oracle_user }}"

- name: chown the oracle installer directory to the oracle user
  file:
    group: "{{ oracle_group }}"
    owner: "{{ oracle_user }}"
    path: "{{ oracle_tmp }}/database"
    state: directory
    recurse: yes