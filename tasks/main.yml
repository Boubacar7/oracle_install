---

- name: check if oracle has already been installed
  command: grep -q "^{{ oracle_db_name }}:" /etc/oratab
  ignore_errors: yes
  register: oracle_installed
  failed_when: oracle_installed.rc == 0

- name: set the hostname
  hostname: name="{{ inventory_hostname }}"

- include: usergroups.yml

- include: filesystems.yml

# INFO: not working for the moment.
# - name: check enough free space to continue 
#   assert:
#     that:
#       - item.mount == "{{ oracle_bin_fs }}" and item.size_available < 5368709120
#       - item.mount == "{{ oracle_data_fs }}" and item.size_available < 2147483648
#       - item.mount == "{{ oracle_tmp }}" and item.size_available < 5368709120
#   with_items: "{{ ansible_mounts }}"
#   ignore_errors: yes

- include: packages.yml

- name: make sure the installer directory exists
  stat: path={{ oracle_tmp }}/database
  register: install_d ir

- include: copy_archives.yml

- include: prereqs.yml

- name: disable setenforce 
  command: /usr/sbin/setenforce 0
  ignore_errors: yes

- name: oracle-recommended selinux
  selinux: policy=targeted state=disabled

- name: compose the oracle automated installer settings
  template:
    src: db_install.rsp.{{ oracle_version }}.j2
    dest: "{{ oracle_tmp }}/db_install.rsp"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"

- include: oracle.yml