---

- name: check if oracle has already been installed
  command: grep -q "^{{ oracle_db_name }}:" /etc/oratab
    ignore_errors: yes
  register: oracle_installed
  failed_when: oracle_installed.rc == 0

- include: packages.yml

- name: make sure the installer directory exists
  stat: path={{ oracle_tmp }}/database
  register: install_dir

- include: copy_archives.yml

- name: make sure the installer directory exists
  stat: path={{ oracle_tmp }}/database
  register: install_dir
  failed_when: not install_dir.stat.exists or not install_dir.stat.isdir

- name: set the hostname
  hostname: "{{ inventory_hostname }}"

- include: prereqs.yml

- name: disable setenforce 
  command: /usr/sbin/setenforce 0
  ignore_errors: yes

- name: oracle-recommended selinux
  selinux: policy=targeted state=disabled

- include: usergroups.yml    

- include: filesystems.yml

- name: compose the oracle automated installer settings
  template:
    src: db_install.rsp.{{ oracle_version }}.j2
    dest: "{{ oracle_tmp }}/db_install.rsp"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"

- name: install oracle
  become: yes
  become_user : "{{ oracle_user }}"
  environment: ora_user_env
  command: 
  args: 
    executable: '{{ oracle_tmp }}/database/runInstaller -silent -force {{ sc_oracle_ignore_prereqs }} -responseFile {{ oracle_tmp }}/db_install.rsp' 
    creates: "{{ oracle_home }}/bin/sqlplus"

- name: wait for orainstRoot.sh
  wait_for: path={{ oracle_path }}/oraInventory/orainstRoot.sh state=present timeout=600
  msg: Unable to find orainstRoot.sh!!

- name: general oracle post-installation
  command: "{{ oracle_path }}/oraInventory/orainstRoot.sh"

- name: wait for root.sh
  wait_for: path={{ oracle_home }}/root.sh state=present timeout=600
  msg: Unable to find root.sh!!
  
- name: db-specific oracle post-installation
  command: "{{ ora_user_env.ORACLE_HOME }}/root.sh"

- name: start the enterprise manager web console
  become: yes
  become_user : "{{ oracle_user }}"
  environment: ora_user_env
  command: "{{ oracle_home }}/bin/emctl start dbconsole"
  ignore_errors: yes

