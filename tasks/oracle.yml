---

- name: install oracle
#  become: yes
#  become_user : "{{ oracle_user }}"
  environment: "{{ ora_user_env }}"
  shell: |
    su - {{ oracle_user }} -c "{{ oracle_tmp }}/database/runInstaller -silent -force -ignoreSysPreReqs -responseFile {{ oracle_tmp }}/db_install.rsp" 2>{{ oracle_tmp }}/stderr.err >{{ oracle_tmp }}/stdout.out
    sleep 30
    while true
    do 
      c=$(ps -ef | grep -v grep | grep db_install.rsp | grep java | wc -l)
      [ $c -eq 0 ] && break
      sleep 10
    done
  args:
    executable: /bin/bash
    creates: "{{ oracle_home }}/bin/sqlplus"

- name: wait for orainstRoot.sh
  wait_for: 
    path: "{{ oracle_base }}/oraInventory/orainstRoot.sh"

- name: general oracle post-installation
  command: "{{ oracle_base }}/oraInventory/orainstRoot.sh"

- name: wait for root.sh
  wait_for: 
    path: "{{ oracle_home }}/root.sh"
  
- name: db-specific oracle post-installation
  command: "{{ oracle_home }}/root.sh"

- name: touch tnsnames.ora
  file: path={{ oracle_home }}/network/admin/tnsnames.ora state=touch owner={{ oracle_user }}
  when: install_mode == "INSTALL_DB_SWONLY"

- name: start the enterprise manager web console
  become: yes
  become_user : "{{ oracle_user }}"
  environment: "{{ ora_user_env }}" 
  command: "{{ oracle_home }}/bin/emctl start dbconsole"
  ignore_errors: yes
  when: oracle_em

- name: start the listener 
  become: yes
  become_user : "{{ oracle_user }}"
  environment: "{{ ora_user_env }}" 
  command: "{{ oracle_home }}/bin/lsnrctl start"

- name: open the listener port
  firewalld: port=5106/tcp state=enabled permanent=yes

- name: restart firewalld
  service: name=firewalld state=restarted